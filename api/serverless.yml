# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: api
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'

functions:
  upload:
    handler: upload.handler
    events:
      - httpApi:
          path: /upload
          method: POST
    environment:
      BUCKET: ${ssm:${self:custom.stage}-s3-name}
    role: ${ssm:${self:custom.stage}-upload-role}

  download:
    handler: download.handler
    events:
      - httpApi:
          path: /download
          method: GET
    environment:
      BUCKET: ${ssm:${self:custom.stage}-s3-name}
      ROLE: ${ssm:${self:custom.stage}-download-role}
    role: ${ssm:${self:custom.stage}-download-role}

  create-job:
    handler: create_job.handler
    events:
      - httpApi:
          path: /jobs
          method: POST
    environment:
      JOBS_TABLE: ${ssm:${self:custom.stage}-dynamodb-job-table}
    role: ${ssm:${self:custom.stage}-job-db-write-permission}

  get-job:
    handler: get_job.handler
    events:
      - httpApi:
          path: /jobs
          method: GET
    environment:
      JOBS_TABLE: ${ssm:${self:custom.stage}-dynamodb-job-table}
    role: ${ssm:${self:custom.stage}-job-db-read-permission}

custom:
  stage: ${opt:stage, self:provider.stage}